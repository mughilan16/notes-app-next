import Head from "next/head";
import NavBar from "@/components/Navbar";
import { useState } from "react";
import type { ModalData } from "@/types/ModalData";
import CreateEditNoteModal from "@/components/CreateEditNoteModal";
import type { Note } from "@/types/Note";
import { FontAwesomeIcon } from "@fortawesome/react-fontawesome";
import { faEdit, faTrash } from "@fortawesome/free-solid-svg-icons";
import { api } from "@/utils/api";

export default function Home() {
  const [modalData, setModalData] = useState<ModalData>({
    mode: "create",
    show: false,
  });
  const { data } = api.note.getAll.useQuery();
  console.log(data);
  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="min-w-screen flex min-h-screen flex-col items-center justify-center">
        <div className="flex h-full min-h-screen flex-col bg-slate-900">
          <NavBar setModalData={setModalData} />
          <div className="mt-14 grid w-screen gap-4 p-4 pt-6 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5">
            {data?.map((note) => (
              <NoteView note={note} key={note.authorId} />
            ))}
          </div>
          <div
            className={`fixed inset-0 h-full w-full overflow-y-auto  bg-gray-950 bg-opacity-50 ${
              modalData.show ? "" : "hidden"
            }`}
            onClick={() => {
              setModalData({ mode: "create", show: false });
            }}
          ></div>
          <CreateEditNoteModal
            modalData={modalData}
            setModalData={setModalData}
          />
        </div>
      </main>
    </>
  );
}

function NoteView(props: { note: Note }) {
  return (
    <div className="flex h-40 min-h-full flex-col gap-1 rounded-sm bg-slate-800 p-3 shadow-sm">
      <div className="flex flex-row justify-between align-middle">
        <span className="grow cursor-pointer text-lg font-medium text-zinc-300">
          {props.note.title}
        </span>
        <div className="flex flex-row gap-2 align-middle">
          <button>
            <FontAwesomeIcon
              icon={faEdit}
              className="h-4 text-gray-300 hover:text-yellow-500"
            />
          </button>
          <button>
            <FontAwesomeIcon
              icon={faTrash}
              className="h-4 text-gray-300 hover:text-red-700"
            />
          </button>
        </div>
      </div>
      <span className="font-regular grow cursor-pointer overflow-hidden text-ellipsis text-lg text-zinc-400">
        {props.note.content}
      </span>
    </div>
  );
}
